INFO  19:01:13,646 - Compiling source file: C:\RTI\PP\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:01:13,649 - #2 program
INFO  19:01:13,649 - #15 p
INFO  19:01:13,649 - #18 const
INFO  19:01:13,649 - #15 int
INFO  19:01:13,649 - #15 size
INFO  19:01:13,649 - #12 =
INFO  19:01:13,649 - #14 10
INFO  19:01:13,649 - #5 ;
INFO  19:01:13,649 - #21 class
INFO  19:01:13,649 - #15 Table
INFO  19:01:13,649 - #3 {
INFO  19:01:13,649 - #15 int
INFO  19:01:13,649 - #15 pos
INFO  19:01:13,649 - #45 [
INFO  19:01:13,650 - #46 ]
INFO  19:01:13,650 - #8 ,
INFO  19:01:13,650 - #15 neg
INFO  19:01:13,650 - #45 [
INFO  19:01:13,650 - #46 ]
INFO  19:01:13,650 - #8 ,
INFO  19:01:13,650 - #15 factor
INFO  19:01:13,663 - #5 ;
INFO  19:01:13,663 - #3 {
INFO  19:01:13,663 - #15 Table
INFO  19:01:13,663 - #6 (
INFO  19:01:13,663 - #15 int
INFO  19:01:13,663 - #15 factor
INFO  19:01:13,663 - #7 )
INFO  19:01:13,663 - #3 {
INFO  19:01:13,663 - #15 this
INFO  19:01:13,663 - #44 .
INFO  19:01:13,663 - #15 factor
INFO  19:01:13,663 - #12 =
INFO  19:01:13,664 - #15 factor
INFO  19:01:13,664 - #5 ;
INFO  19:01:13,664 - #4 }
INFO  19:01:13,664 - #13 void
INFO  19:01:13,664 - #15 putp
INFO  19:01:13,664 - #6 (
INFO  19:01:13,664 - #15 int
INFO  19:01:13,664 - #15 a
INFO  19:01:13,664 - #8 ,
INFO  19:01:13,664 - #15 int
INFO  19:01:13,664 - #15 idx
INFO  19:01:13,664 - #7 )
INFO  19:01:13,664 - #3 {
INFO  19:01:13,664 - #15 this
INFO  19:01:13,664 - #44 .
INFO  19:01:13,664 - #15 pos
INFO  19:01:13,664 - #45 [
INFO  19:01:13,664 - #15 idx
INFO  19:01:13,664 - #46 ]
INFO  19:01:13,664 - #12 =
INFO  19:01:13,664 - #15 a
INFO  19:01:13,664 - #5 ;
INFO  19:01:13,664 - #4 }
INFO  19:01:13,664 - #13 void
INFO  19:01:13,664 - #15 putn
INFO  19:01:13,664 - #6 (
INFO  19:01:13,664 - #15 int
INFO  19:01:13,664 - #15 a
INFO  19:01:13,664 - #8 ,
INFO  19:01:13,664 - #15 int
INFO  19:01:13,664 - #15 idx
INFO  19:01:13,664 - #7 )
INFO  19:01:13,664 - #3 {
INFO  19:01:13,664 - #15 this
INFO  19:01:13,664 - #44 .
INFO  19:01:13,664 - #15 neg
INFO  19:01:13,664 - #45 [
INFO  19:01:13,664 - #15 idx
INFO  19:01:13,664 - #46 ]
INFO  19:01:13,664 - #12 =
INFO  19:01:13,664 - #15 a
INFO  19:01:13,665 - #5 ;
INFO  19:01:13,665 - #4 }
INFO  19:01:13,665 - #15 int
INFO  19:01:13,665 - #15 getp
INFO  19:01:13,665 - #6 (
INFO  19:01:13,665 - #15 int
INFO  19:01:13,665 - #15 idx
INFO  19:01:13,665 - #7 )
INFO  19:01:13,665 - #3 {
INFO  19:01:13,665 - #10 return
INFO  19:01:13,665 - #15 pos
INFO  19:01:13,665 - #45 [
INFO  19:01:13,665 - #15 idx
INFO  19:01:13,665 - #46 ]
INFO  19:01:13,665 - #5 ;
INFO  19:01:13,665 - #4 }
INFO  19:01:13,665 - #15 int
INFO  19:01:13,665 - #15 getn
INFO  19:01:13,665 - #6 (
INFO  19:01:13,665 - #15 int
INFO  19:01:13,665 - #15 idx
INFO  19:01:13,665 - #7 )
INFO  19:01:13,666 - #3 {
INFO  19:01:13,666 - #10 return
INFO  19:01:13,666 - #15 neg
INFO  19:01:13,666 - #45 [
INFO  19:01:13,666 - #15 idx
INFO  19:01:13,666 - #46 ]
INFO  19:01:13,666 - #5 ;
INFO  19:01:13,666 - #4 }
INFO  19:01:13,666 - #4 }
INFO  19:01:13,666 - #4 }
INFO  19:01:13,666 - #15 Table
INFO  19:01:13,666 - #15 val
INFO  19:01:13,666 - #5 ;
INFO  19:01:13,666 - #15 Int
INFO  19:01:13,666 - #15 rows
INFO  19:01:13,666 - #8 ,
INFO  19:01:13,668 - #15 columns
INFO  19:01:13,668 - #5 ;
INFO  19:01:13,668 - #3 {
INFO  19:01:13,668 - #13 void
INFO  19:01:13,668 - #15 f
INFO  19:01:13,668 - #6 (
INFO  19:01:13,668 - #15 char
INFO  19:01:13,668 - #15 ch
INFO  19:01:13,668 - #8 ,
INFO  19:01:13,668 - #15 int
INFO  19:01:13,668 - #15 a
INFO  19:01:13,668 - #8 ,
INFO  19:01:13,668 - #15 int
INFO  19:01:13,668 - #15 arg
INFO  19:01:13,668 - #7 )
INFO  19:01:13,669 - #15 int
INFO  19:01:13,669 - #15 x
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #3 {
INFO  19:01:13,669 - #15 x
INFO  19:01:13,669 - #12 =
INFO  19:01:13,669 - #15 arg
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #4 }
INFO  19:01:13,669 - #13 void
INFO  19:01:13,669 - #15 main
INFO  19:01:13,669 - #6 (
INFO  19:01:13,669 - #7 )
INFO  19:01:13,669 - #15 int
INFO  19:01:13,669 - #15 x
INFO  19:01:13,669 - #8 ,
INFO  19:01:13,669 - #15 i
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #15 char
INFO  19:01:13,669 - #15 c
INFO  19:01:13,669 - #8 ,
INFO  19:01:13,669 - #15 int
INFO  19:01:13,669 - #15 arr
INFO  19:01:13,669 - #45 [
INFO  19:01:13,669 - #46 ]
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #3 {
INFO  19:01:13,669 - #15 val
INFO  19:01:13,669 - #12 =
INFO  19:01:13,669 - #24 new
INFO  19:01:13,669 - #15 Table
INFO  19:01:13,669 - #6 (
INFO  19:01:13,669 - #14 2
INFO  19:01:13,669 - #7 )
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #15 arr
INFO  19:01:13,669 - #12 =
INFO  19:01:13,669 - #24 new
INFO  19:01:13,669 - #15 int
INFO  19:01:13,669 - #45 [
INFO  19:01:13,669 - #14 3
INFO  19:01:13,669 - #46 ]
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #15 i
INFO  19:01:13,669 - #12 =
INFO  19:01:13,669 - #14 0
INFO  19:01:13,669 - #5 ;
INFO  19:01:13,669 - #23 while
INFO  19:01:13,669 - #6 (
INFO  19:01:13,669 - #15 i
INFO  19:01:13,670 - #37 <
INFO  19:01:13,670 - #14 3
INFO  19:01:13,670 - #7 )
INFO  19:01:13,670 - #3 {
INFO  19:01:13,670 - #15 arr
INFO  19:01:13,670 - #45 [
INFO  19:01:13,670 - #15 i
INFO  19:01:13,670 - #46 ]
INFO  19:01:13,670 - #12 =
INFO  19:01:13,670 - #15 i
INFO  19:01:13,670 - #5 ;
INFO  19:01:13,670 - #15 i
INFO  19:01:13,670 - #42 ++
INFO  19:01:13,670 - #5 ;
INFO  19:01:13,670 - #4 }
INFO  19:01:13,670 - #15 arr
INFO  19:01:13,670 - #44 .
INFO  19:01:13,670 - #15 foreach
INFO  19:01:13,670 - #6 (
INFO  19:01:13,670 - #15 x
INFO  19:01:13,670 - #47 =>
INFO  19:01:13,670 - #9 print
INFO  19:01:13,670 - #6 (
INFO  19:01:13,671 - #15 x
INFO  19:01:13,671 - #7 )
INFO  19:01:13,671 - #5 ;
INFO  19:01:13,671 - #7 )
INFO  19:01:13,671 - #5 ;
INFO  19:01:13,671 - #15 val
INFO  19:01:13,671 - #44 .
INFO  19:01:13,671 - #15 pos
INFO  19:01:13,671 - #12 =
INFO  19:01:13,671 - #24 new
INFO  19:01:13,671 - #15 int
INFO  19:01:13,671 - #45 [
INFO  19:01:13,671 - #15 size
INFO  19:01:13,671 - #46 ]
INFO  19:01:13,671 - #5 ;
INFO  19:01:13,671 - #15 val
INFO  19:01:13,671 - #44 .
INFO  19:01:13,671 - #15 neg
INFO  19:01:13,671 - #12 =
INFO  19:01:13,671 - #24 new
INFO  19:01:13,671 - #15 int
INFO  19:01:13,671 - #45 [
INFO  19:01:13,671 - #15 size
INFO  19:01:13,671 - #46 ]
INFO  19:01:13,671 - #5 ;
INFO  19:01:13,671 - #25 read
INFO  19:01:13,671 - #6 (
INFO  19:01:13,672 - #15 x
INFO  19:01:13,672 - #7 )
INFO  19:01:13,672 - #5 ;
INFO  19:01:13,672 - #45 [
INFO  19:01:13,672 - #15 i
INFO  19:01:13,672 - #8 ,
INFO  19:01:13,672 - #8 ,
INFO  19:01:13,672 - #15 x
INFO  19:01:13,672 - #46 ]
INFO  19:01:13,672 - #12 =
INFO  19:01:13,672 - #15 arr
INFO  19:01:13,672 - #5 ;
INFO  19:01:13,672 - #23 while
INFO  19:01:13,672 - #6 (
INFO  19:01:13,672 - #15 i
INFO  19:01:13,672 - #37 <
INFO  19:01:13,672 - #15 size
INFO  19:01:13,672 - #7 )
INFO  19:01:13,672 - #3 {
INFO  19:01:13,672 - #15 val
INFO  19:01:13,673 - #44 .
INFO  19:01:13,673 - #15 putp
INFO  19:01:13,673 - #6 (
INFO  19:01:13,673 - #14 0
INFO  19:01:13,673 - #8 ,
INFO  19:01:13,673 - #15 i
INFO  19:01:13,673 - #7 )
INFO  19:01:13,673 - #5 ;
INFO  19:01:13,673 - #15 val
INFO  19:01:13,673 - #44 .
INFO  19:01:13,673 - #15 putn
INFO  19:01:13,673 - #6 (
INFO  19:01:13,673 - #14 0
INFO  19:01:13,673 - #8 ,
INFO  19:01:13,673 - #15 i
INFO  19:01:13,673 - #7 )
INFO  19:01:13,673 - #5 ;
INFO  19:01:13,673 - #15 i
INFO  19:01:13,673 - #42 ++
INFO  19:01:13,673 - #5 ;
INFO  19:01:13,673 - #4 }
INFO  19:01:13,673 - #15 f
INFO  19:01:13,673 - #6 (
INFO  19:01:13,673 - #15 c
INFO  19:01:13,673 - #8 ,
INFO  19:01:13,673 - #15 x
INFO  19:01:13,673 - #8 ,
INFO  19:01:13,674 - #15 i
INFO  19:01:13,674 - #7 )
INFO  19:01:13,674 - #5 ;
INFO  19:01:13,674 - #25 read
INFO  19:01:13,674 - #6 (
INFO  19:01:13,674 - #15 rows
INFO  19:01:13,674 - #7 )
INFO  19:01:13,674 - #5 ;
INFO  19:01:13,674 - #15 x
INFO  19:01:13,674 - #12 =
INFO  19:01:13,674 - #15 rows
INFO  19:01:13,674 - #5 ;
INFO  19:01:13,674 - #23 while
INFO  19:01:13,674 - #6 (
INFO  19:01:13,674 - #49 true
INFO  19:01:13,674 - #7 )
INFO  19:01:13,674 - #3 {
INFO  19:01:13,674 - #16 if
INFO  19:01:13,674 - #6 (
INFO  19:01:13,674 - #15 x
INFO  19:01:13,674 - #38 <=
INFO  19:01:13,674 - #14 0
INFO  19:01:13,674 - #7 )
INFO  19:01:13,674 - #19 break
INFO  19:01:13,674 - #5 ;
INFO  19:01:13,674 - #16 if
INFO  19:01:13,674 - #6 (
INFO  19:01:13,675 - #14 0
INFO  19:01:13,675 - #38 <=
INFO  19:01:13,675 - #15 x
INFO  19:01:13,675 - #39 &&
INFO  19:01:13,675 - #15 x
INFO  19:01:13,675 - #37 <
INFO  19:01:13,675 - #15 size
INFO  19:01:13,675 - #7 )
INFO  19:01:13,675 - #3 {
INFO  19:01:13,675 - #15 val
INFO  19:01:13,675 - #44 .
INFO  19:01:13,675 - #15 putp
INFO  19:01:13,675 - #6 (
INFO  19:01:13,675 - #15 val
INFO  19:01:13,675 - #44 .
INFO  19:01:13,675 - #15 getp
INFO  19:01:13,675 - #6 (
INFO  19:01:13,675 - #15 x
INFO  19:01:13,675 - #7 )
INFO  19:01:13,675 - #11 +
INFO  19:01:13,675 - #14 1
INFO  19:01:13,675 - #7 )
INFO  19:01:13,675 - #5 ;
INFO  19:01:13,675 - #4 }
INFO  19:01:13,675 - #17 else
INFO  19:01:13,675 - #16 if
INFO  19:01:13,675 - #6 (
INFO  19:01:13,675 - #29 -
INFO  19:01:13,675 - #15 size
INFO  19:01:13,675 - #37 <
INFO  19:01:13,675 - #15 x
INFO  19:01:13,675 - #39 &&
INFO  19:01:13,675 - #15 x
INFO  19:01:13,675 - #37 <
INFO  19:01:13,676 - #14 0
INFO  19:01:13,676 - #7 )
INFO  19:01:13,676 - #3 {
INFO  19:01:13,676 - #15 val
INFO  19:01:13,676 - #44 .
INFO  19:01:13,676 - #15 putn
INFO  19:01:13,676 - #6 (
INFO  19:01:13,676 - #15 val
INFO  19:01:13,676 - #44 .
INFO  19:01:13,676 - #15 getn
INFO  19:01:13,676 - #6 (
INFO  19:01:13,676 - #29 -
INFO  19:01:13,676 - #15 x
INFO  19:01:13,676 - #7 )
INFO  19:01:13,676 - #11 +
INFO  19:01:13,676 - #14 1
INFO  19:01:13,676 - #7 )
INFO  19:01:13,676 - #5 ;
INFO  19:01:13,676 - #4 }
INFO  19:01:13,676 - #25 read
INFO  19:01:13,676 - #6 (
INFO  19:01:13,676 - #15 x
INFO  19:01:13,676 - #7 )
INFO  19:01:13,676 - #5 ;
INFO  19:01:13,676 - #4 }
INFO  19:01:13,676 - #4 }
INFO  19:01:13,676 - #4 }
