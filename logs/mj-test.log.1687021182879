INFO  18:58:43,322 - Compiling source file: C:\RTI\PP\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:58:43,325 - #2 program
INFO  18:58:43,325 - #15 p
INFO  18:58:43,325 - #18 const
INFO  18:58:43,325 - #15 int
INFO  18:58:43,325 - #15 size
INFO  18:58:43,325 - #12 =
INFO  18:58:43,325 - #14 10
INFO  18:58:43,326 - #5 ;
INFO  18:58:43,326 - #21 class
INFO  18:58:43,326 - #15 Table
INFO  18:58:43,326 - #3 {
INFO  18:58:43,326 - #15 int
INFO  18:58:43,326 - #15 pos
INFO  18:58:43,326 - #45 [
INFO  18:58:43,326 - #46 ]
INFO  18:58:43,326 - #8 ,
INFO  18:58:43,326 - #15 neg
INFO  18:58:43,326 - #45 [
INFO  18:58:43,326 - #46 ]
INFO  18:58:43,326 - #8 ,
INFO  18:58:43,326 - #15 factor
INFO  18:58:43,338 - #5 ;
INFO  18:58:43,338 - #3 {
INFO  18:58:43,338 - #15 Table
INFO  18:58:43,338 - #6 (
INFO  18:58:43,338 - #15 int
INFO  18:58:43,338 - #15 factor
INFO  18:58:43,338 - #7 )
INFO  18:58:43,338 - #3 {
INFO  18:58:43,338 - #15 this
INFO  18:58:43,338 - #44 .
INFO  18:58:43,339 - #15 factor
INFO  18:58:43,339 - #12 =
INFO  18:58:43,339 - #15 factor
INFO  18:58:43,339 - #5 ;
INFO  18:58:43,339 - #4 }
INFO  18:58:43,339 - #13 void
INFO  18:58:43,339 - #15 putp
INFO  18:58:43,339 - #6 (
INFO  18:58:43,339 - #15 int
INFO  18:58:43,339 - #15 a
INFO  18:58:43,339 - #8 ,
INFO  18:58:43,339 - #15 int
INFO  18:58:43,339 - #15 idx
INFO  18:58:43,339 - #7 )
INFO  18:58:43,339 - #3 {
INFO  18:58:43,339 - #15 this
INFO  18:58:43,339 - #44 .
INFO  18:58:43,339 - #15 pos
INFO  18:58:43,339 - #45 [
INFO  18:58:43,339 - #15 idx
INFO  18:58:43,339 - #46 ]
INFO  18:58:43,340 - #12 =
INFO  18:58:43,340 - #15 a
INFO  18:58:43,340 - #5 ;
INFO  18:58:43,340 - #4 }
INFO  18:58:43,340 - #13 void
INFO  18:58:43,340 - #15 putn
INFO  18:58:43,340 - #6 (
INFO  18:58:43,340 - #15 int
INFO  18:58:43,340 - #15 a
INFO  18:58:43,340 - #8 ,
INFO  18:58:43,340 - #15 int
INFO  18:58:43,340 - #15 idx
INFO  18:58:43,340 - #7 )
INFO  18:58:43,340 - #3 {
INFO  18:58:43,340 - #15 this
INFO  18:58:43,340 - #44 .
INFO  18:58:43,340 - #15 neg
INFO  18:58:43,340 - #45 [
INFO  18:58:43,340 - #15 idx
INFO  18:58:43,340 - #46 ]
INFO  18:58:43,340 - #12 =
INFO  18:58:43,340 - #15 a
INFO  18:58:43,341 - #5 ;
INFO  18:58:43,341 - #4 }
INFO  18:58:43,341 - #15 int
INFO  18:58:43,341 - #15 getp
INFO  18:58:43,341 - #6 (
INFO  18:58:43,341 - #15 int
INFO  18:58:43,341 - #15 idx
INFO  18:58:43,341 - #7 )
INFO  18:58:43,341 - #3 {
INFO  18:58:43,341 - #10 return
INFO  18:58:43,341 - #15 pos
INFO  18:58:43,341 - #45 [
INFO  18:58:43,341 - #15 idx
INFO  18:58:43,341 - #46 ]
INFO  18:58:43,341 - #5 ;
INFO  18:58:43,341 - #4 }
INFO  18:58:43,341 - #15 int
INFO  18:58:43,341 - #15 getn
INFO  18:58:43,341 - #6 (
INFO  18:58:43,342 - #15 int
INFO  18:58:43,342 - #15 idx
INFO  18:58:43,342 - #7 )
INFO  18:58:43,342 - #3 {
INFO  18:58:43,342 - #10 return
INFO  18:58:43,342 - #15 neg
INFO  18:58:43,342 - #45 [
INFO  18:58:43,342 - #15 idx
INFO  18:58:43,342 - #46 ]
INFO  18:58:43,342 - #5 ;
INFO  18:58:43,342 - #4 }
INFO  18:58:43,342 - #4 }
INFO  18:58:43,342 - #4 }
INFO  18:58:43,342 - #15 Table
INFO  18:58:43,342 - #15 val
INFO  18:58:43,342 - #5 ;
INFO  18:58:43,342 - #15 Int
INFO  18:58:43,342 - #15 rows
INFO  18:58:43,342 - #8 ,
INFO  18:58:43,342 - #15 columns
INFO  18:58:43,342 - #5 ;
INFO  18:58:43,342 - #3 {
INFO  18:58:43,342 - #13 void
INFO  18:58:43,342 - #15 f
INFO  18:58:43,342 - #6 (
INFO  18:58:43,343 - #15 char
INFO  18:58:43,343 - #15 ch
INFO  18:58:43,343 - #8 ,
INFO  18:58:43,343 - #15 int
INFO  18:58:43,343 - #15 a
INFO  18:58:43,343 - #8 ,
INFO  18:58:43,343 - #15 int
INFO  18:58:43,343 - #15 arg
INFO  18:58:43,343 - #7 )
INFO  18:58:43,343 - #15 int
INFO  18:58:43,343 - #15 x
INFO  18:58:43,343 - #5 ;
INFO  18:58:43,343 - #3 {
INFO  18:58:43,343 - #15 x
INFO  18:58:43,344 - #12 =
INFO  18:58:43,344 - #15 arg
INFO  18:58:43,344 - #5 ;
INFO  18:58:43,344 - #4 }
INFO  18:58:43,344 - #13 void
INFO  18:58:43,344 - #15 main
INFO  18:58:43,344 - #6 (
INFO  18:58:43,344 - #7 )
INFO  18:58:43,344 - #15 int
INFO  18:58:43,344 - #15 x
INFO  18:58:43,344 - #8 ,
INFO  18:58:43,344 - #15 i
INFO  18:58:43,344 - #5 ;
INFO  18:58:43,344 - #15 char
INFO  18:58:43,344 - #15 c
INFO  18:58:43,344 - #8 ,
INFO  18:58:43,345 - #15 int
INFO  18:58:43,345 - #15 arr
INFO  18:58:43,345 - #45 [
INFO  18:58:43,345 - #46 ]
INFO  18:58:43,345 - #5 ;
INFO  18:58:43,345 - #3 {
INFO  18:58:43,345 - #15 val
INFO  18:58:43,345 - #12 =
INFO  18:58:43,345 - #24 new
INFO  18:58:43,345 - #15 Table
INFO  18:58:43,345 - #6 (
INFO  18:58:43,345 - #14 2
INFO  18:58:43,345 - #7 )
INFO  18:58:43,346 - #5 ;
INFO  18:58:43,346 - #15 arr
INFO  18:58:43,346 - #12 =
INFO  18:58:43,346 - #24 new
INFO  18:58:43,346 - #15 int
INFO  18:58:43,346 - #45 [
INFO  18:58:43,346 - #14 3
INFO  18:58:43,346 - #46 ]
INFO  18:58:43,346 - #5 ;
INFO  18:58:43,346 - #15 i
INFO  18:58:43,346 - #12 =
INFO  18:58:43,346 - #14 0
INFO  18:58:43,346 - #5 ;
INFO  18:58:43,346 - #23 while
INFO  18:58:43,346 - #6 (
INFO  18:58:43,346 - #15 i
INFO  18:58:43,346 - #37 <
INFO  18:58:43,347 - #14 3
INFO  18:58:43,347 - #7 )
INFO  18:58:43,347 - #3 {
INFO  18:58:43,347 - #15 arr
INFO  18:58:43,347 - #45 [
INFO  18:58:43,347 - #15 i
INFO  18:58:43,347 - #46 ]
INFO  18:58:43,347 - #12 =
INFO  18:58:43,347 - #15 i
INFO  18:58:43,347 - #5 ;
INFO  18:58:43,347 - #15 i
INFO  18:58:43,347 - #42 ++
INFO  18:58:43,347 - #5 ;
INFO  18:58:43,347 - #4 }
INFO  18:58:43,347 - #15 arr
INFO  18:58:43,347 - #44 .
INFO  18:58:43,347 - #15 foreach
INFO  18:58:43,347 - #6 (
INFO  18:58:43,347 - #15 x
INFO  18:58:43,347 - #47 =>
INFO  18:58:43,348 - #9 print
INFO  18:58:43,348 - #6 (
INFO  18:58:43,348 - #15 x
INFO  18:58:43,348 - #7 )
INFO  18:58:43,348 - #5 ;
INFO  18:58:43,348 - #7 )
INFO  18:58:43,348 - #5 ;
INFO  18:58:43,348 - #15 val
INFO  18:58:43,348 - #44 .
INFO  18:58:43,348 - #15 pos
INFO  18:58:43,348 - #12 =
INFO  18:58:43,348 - #24 new
INFO  18:58:43,348 - #15 int
INFO  18:58:43,348 - #45 [
INFO  18:58:43,348 - #15 size
INFO  18:58:43,348 - #46 ]
INFO  18:58:43,348 - #5 ;
INFO  18:58:43,348 - #15 val
INFO  18:58:43,348 - #44 .
INFO  18:58:43,348 - #15 neg
INFO  18:58:43,348 - #12 =
INFO  18:58:43,348 - #24 new
INFO  18:58:43,348 - #15 int
INFO  18:58:43,348 - #45 [
INFO  18:58:43,348 - #15 size
INFO  18:58:43,348 - #46 ]
INFO  18:58:43,348 - #5 ;
INFO  18:58:43,348 - #25 read
INFO  18:58:43,348 - #6 (
INFO  18:58:43,348 - #15 x
INFO  18:58:43,348 - #7 )
INFO  18:58:43,349 - #5 ;
INFO  18:58:43,349 - #45 [
INFO  18:58:43,349 - #15 i
INFO  18:58:43,349 - #8 ,
INFO  18:58:43,349 - #8 ,
INFO  18:58:43,349 - #15 x
INFO  18:58:43,349 - #46 ]
INFO  18:58:43,349 - #12 =
INFO  18:58:43,349 - #15 arr
INFO  18:58:43,349 - #5 ;
INFO  18:58:43,349 - #23 while
INFO  18:58:43,349 - #6 (
INFO  18:58:43,349 - #15 i
INFO  18:58:43,349 - #37 <
INFO  18:58:43,349 - #15 size
INFO  18:58:43,349 - #7 )
INFO  18:58:43,349 - #3 {
INFO  18:58:43,349 - #15 val
INFO  18:58:43,349 - #44 .
INFO  18:58:43,349 - #15 putp
INFO  18:58:43,349 - #6 (
INFO  18:58:43,349 - #14 0
INFO  18:58:43,349 - #8 ,
INFO  18:58:43,349 - #15 i
INFO  18:58:43,349 - #7 )
INFO  18:58:43,349 - #5 ;
INFO  18:58:43,350 - #15 val
INFO  18:58:43,350 - #44 .
INFO  18:58:43,350 - #15 putn
INFO  18:58:43,350 - #6 (
INFO  18:58:43,350 - #14 0
INFO  18:58:43,350 - #8 ,
INFO  18:58:43,350 - #15 i
INFO  18:58:43,350 - #7 )
INFO  18:58:43,350 - #5 ;
INFO  18:58:43,350 - #15 i
INFO  18:58:43,350 - #42 ++
INFO  18:58:43,350 - #5 ;
INFO  18:58:43,350 - #4 }
INFO  18:58:43,350 - #15 f
INFO  18:58:43,350 - #6 (
INFO  18:58:43,350 - #15 c
INFO  18:58:43,350 - #8 ,
INFO  18:58:43,350 - #15 x
INFO  18:58:43,350 - #8 ,
INFO  18:58:43,350 - #15 i
INFO  18:58:43,350 - #7 )
INFO  18:58:43,351 - #5 ;
INFO  18:58:43,351 - #25 read
INFO  18:58:43,351 - #6 (
INFO  18:58:43,351 - #15 rows
INFO  18:58:43,351 - #7 )
INFO  18:58:43,351 - #5 ;
INFO  18:58:43,351 - #15 x
INFO  18:58:43,351 - #12 =
INFO  18:58:43,351 - #15 rows
INFO  18:58:43,351 - #5 ;
INFO  18:58:43,351 - #23 while
INFO  18:58:43,351 - #6 (
INFO  18:58:43,351 - #49 true
INFO  18:58:43,351 - #7 )
INFO  18:58:43,351 - #3 {
INFO  18:58:43,351 - #16 if
INFO  18:58:43,351 - #6 (
INFO  18:58:43,351 - #15 x
INFO  18:58:43,351 - #38 <=
INFO  18:58:43,351 - #14 0
INFO  18:58:43,351 - #7 )
INFO  18:58:43,351 - #19 break
INFO  18:58:43,351 - #5 ;
INFO  18:58:43,351 - #16 if
INFO  18:58:43,352 - #6 (
INFO  18:58:43,352 - #14 0
INFO  18:58:43,352 - #38 <=
INFO  18:58:43,352 - #15 x
INFO  18:58:43,352 - #39 &&
INFO  18:58:43,352 - #15 x
INFO  18:58:43,352 - #37 <
INFO  18:58:43,352 - #15 size
INFO  18:58:43,352 - #7 )
INFO  18:58:43,352 - #3 {
INFO  18:58:43,352 - #15 val
INFO  18:58:43,352 - #44 .
INFO  18:58:43,352 - #15 putp
INFO  18:58:43,352 - #6 (
INFO  18:58:43,352 - #15 val
INFO  18:58:43,352 - #44 .
INFO  18:58:43,352 - #15 getp
INFO  18:58:43,352 - #6 (
INFO  18:58:43,352 - #15 x
INFO  18:58:43,352 - #7 )
INFO  18:58:43,352 - #11 +
INFO  18:58:43,352 - #14 1
INFO  18:58:43,352 - #7 )
INFO  18:58:43,352 - #5 ;
INFO  18:58:43,352 - #4 }
INFO  18:58:43,352 - #17 else
INFO  18:58:43,352 - #16 if
INFO  18:58:43,352 - #6 (
INFO  18:58:43,353 - #15 size
INFO  18:58:43,353 - #37 <
INFO  18:58:43,353 - #15 x
INFO  18:58:43,353 - #39 &&
INFO  18:58:43,353 - #15 x
INFO  18:58:43,353 - #37 <
INFO  18:58:43,353 - #14 0
INFO  18:58:43,353 - #7 )
INFO  18:58:43,353 - #3 {
INFO  18:58:43,353 - #15 val
INFO  18:58:43,353 - #44 .
INFO  18:58:43,353 - #15 putn
INFO  18:58:43,353 - #6 (
INFO  18:58:43,353 - #15 val
INFO  18:58:43,353 - #44 .
INFO  18:58:43,353 - #15 getn
INFO  18:58:43,353 - #6 (
INFO  18:58:43,353 - #15 x
INFO  18:58:43,353 - #7 )
INFO  18:58:43,353 - #11 +
INFO  18:58:43,353 - #14 1
INFO  18:58:43,353 - #7 )
INFO  18:58:43,353 - #5 ;
INFO  18:58:43,353 - #4 }
INFO  18:58:43,353 - #25 read
INFO  18:58:43,354 - #6 (
INFO  18:58:43,354 - #15 x
INFO  18:58:43,354 - #7 )
INFO  18:58:43,354 - #5 ;
INFO  18:58:43,354 - #4 }
INFO  18:58:43,354 - #4 }
INFO  18:58:43,354 - #4 }
