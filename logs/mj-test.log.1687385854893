INFO  00:16:11,792 - Compiling source file: C:\RTI\PP\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:16:11,817 - #2 program
INFO  00:16:11,817 - #44 test302
INFO  00:16:11,817 - #6 const
INFO  00:16:11,818 - #44 int
INFO  00:16:11,818 - #44 jedan
INFO  00:16:11,818 - #33 =
INFO  00:16:11,818 - #45 1
INFO  00:16:11,818 - #18 ;
INFO  00:16:11,818 - #44 int
INFO  00:16:11,818 - #44 i
INFO  00:16:11,818 - #18 ;
INFO  00:16:11,818 - #44 bool
INFO  00:16:11,819 - #44 ibool
INFO  00:16:11,819 - #18 ;
INFO  00:16:11,819 - #44 int
INFO  00:16:11,819 - #44 niz2
INFO  00:16:11,819 - #38 [
INFO  00:16:11,819 - #39 ]
INFO  00:16:11,819 - #18 ;
INFO  00:16:11,819 - #44 int
INFO  00:16:11,819 - #44 niz
INFO  00:16:11,831 - #38 [
INFO  00:16:11,831 - #39 ]
INFO  00:16:11,831 - #18 ;
INFO  00:16:11,831 - #44 int
INFO  00:16:11,831 - #44 a
INFO  00:16:11,831 - #41 ,
INFO  00:16:11,831 - #44 curr
INFO  00:16:11,831 - #18 ;
INFO  00:16:11,831 - #16 {
INFO  00:16:11,831 - #44 int
INFO  00:16:11,832 - #44 sum
INFO  00:16:11,832 - #36 (
INFO  00:16:11,832 - #44 int
INFO  00:16:11,832 - #44 z
INFO  00:16:11,832 - #41 ,
INFO  00:16:11,832 - #44 int
INFO  00:16:11,832 - #44 d
INFO  00:16:11,833 - #37 )
INFO  00:16:11,833 - #16 {
INFO  00:16:11,833 - #4 return
INFO  00:16:11,834 - #44 z
INFO  00:16:11,834 - #19 +
INFO  00:16:11,836 - #44 d
INFO  00:16:11,837 - #18 ;
INFO  00:16:11,837 - #17 }
INFO  00:16:11,837 - #44 int
INFO  00:16:11,837 - #44 inkrement
INFO  00:16:11,837 - #36 (
INFO  00:16:11,837 - #44 int
INFO  00:16:11,837 - #44 a
INFO  00:16:11,837 - #41 ,
INFO  00:16:11,837 - #44 int
INFO  00:16:11,837 - #44 inc
INFO  00:16:11,837 - #37 )
INFO  00:16:11,837 - #44 int
INFO  00:16:11,838 - #44 pom
INFO  00:16:11,838 - #18 ;
INFO  00:16:11,838 - #16 {
INFO  00:16:11,838 - #9 if
INFO  00:16:11,838 - #36 (
INFO  00:16:11,838 - #44 inc
INFO  00:16:11,838 - #24 ==
INFO  00:16:11,838 - #44 jedan
INFO  00:16:11,838 - #37 )
INFO  00:16:11,839 - #44 pom
INFO  00:16:11,839 - #33 =
INFO  00:16:11,839 - #45 1
INFO  00:16:11,839 - #18 ;
INFO  00:16:11,840 - #8 else
INFO  00:16:11,840 - #9 if
INFO  00:16:11,840 - #36 (
INFO  00:16:11,840 - #44 inc
INFO  00:16:11,840 - #24 ==
INFO  00:16:11,840 - #45 2
INFO  00:16:11,840 - #37 )
INFO  00:16:11,840 - #44 pom
INFO  00:16:11,840 - #33 =
INFO  00:16:11,840 - #44 a
INFO  00:16:11,840 - #18 ;
INFO  00:16:11,840 - #4 return
INFO  00:16:11,840 - #44 sum
INFO  00:16:11,840 - #36 (
INFO  00:16:11,840 - #44 a
INFO  00:16:11,840 - #41 ,
INFO  00:16:11,841 - #44 pom
INFO  00:16:11,841 - #37 )
INFO  00:16:11,841 - #18 ;
INFO  00:16:11,841 - #17 }
INFO  00:16:11,841 - #44 bool
INFO  00:16:11,841 - #44 verify
INFO  00:16:11,841 - #36 (
INFO  00:16:11,841 - #37 )
INFO  00:16:11,841 - #16 {
INFO  00:16:11,841 - #3 print
INFO  00:16:11,841 - #36 (
INFO  00:16:11,841 - #46 'v'
INFO  00:16:11,841 - #37 )
