INFO  16:01:40,832 - Compiling source file: C:\RTI\PP\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:01:40,835 - #2 program
INFO  16:01:40,835 - #46 test302
INFO  16:01:40,835 - #6 const
INFO  16:01:40,835 - #46 int
INFO  16:01:40,836 - #46 jedan
INFO  16:01:40,836 - #34 =
INFO  16:01:40,836 - #47 1
INFO  16:01:40,836 - #19 ;
INFO  16:01:40,836 - #46 int
INFO  16:01:40,836 - #46 i
INFO  16:01:40,836 - #19 ;
INFO  16:01:40,836 - #46 bool
INFO  16:01:40,836 - #46 ibool
INFO  16:01:40,836 - #19 ;
INFO  16:01:40,836 - #46 int
INFO  16:01:40,836 - #46 niz2
INFO  16:01:40,836 - #39 [
INFO  16:01:40,837 - #40 ]
INFO  16:01:40,837 - #19 ;
INFO  16:01:40,837 - #46 int
INFO  16:01:40,837 - #46 niz
INFO  16:01:40,849 - #39 [
INFO  16:01:40,849 - #40 ]
INFO  16:01:40,849 - #19 ;
INFO  16:01:40,849 - #46 int
INFO  16:01:40,849 - #46 a
INFO  16:01:40,849 - #42 ,
INFO  16:01:40,849 - #46 curr
INFO  16:01:40,849 - #19 ;
INFO  16:01:40,849 - #17 {
INFO  16:01:40,849 - #46 int
INFO  16:01:40,849 - #46 sum
INFO  16:01:40,849 - #37 (
INFO  16:01:40,850 - #46 int
INFO  16:01:40,850 - #46 z
INFO  16:01:40,850 - #42 ,
INFO  16:01:40,850 - #46 int
INFO  16:01:40,850 - #46 d
INFO  16:01:40,850 - #38 )
INFO  16:01:40,850 - #17 {
INFO  16:01:40,850 - #4 return
INFO  16:01:40,850 - #46 z
INFO  16:01:40,850 - #20 +
INFO  16:01:40,850 - #46 d
INFO  16:01:40,850 - #19 ;
INFO  16:01:40,850 - #18 }
INFO  16:01:40,850 - #46 int
INFO  16:01:40,850 - #46 inkrement
INFO  16:01:40,850 - #37 (
INFO  16:01:40,850 - #46 int
INFO  16:01:40,850 - #46 a
INFO  16:01:40,851 - #42 ,
INFO  16:01:40,851 - #46 int
INFO  16:01:40,851 - #46 inc
INFO  16:01:40,851 - #38 )
INFO  16:01:40,851 - #46 int
INFO  16:01:40,851 - #46 pom
INFO  16:01:40,851 - #19 ;
INFO  16:01:40,851 - #17 {
INFO  16:01:40,851 - #9 if
INFO  16:01:40,851 - #37 (
INFO  16:01:40,851 - #46 inc
INFO  16:01:40,851 - #25 ==
INFO  16:01:40,851 - #46 jedan
INFO  16:01:40,851 - #38 )
INFO  16:01:40,851 - #46 pom
INFO  16:01:40,851 - #34 =
INFO  16:01:40,851 - #47 1
INFO  16:01:40,851 - #19 ;
INFO  16:01:40,851 - #8 else
INFO  16:01:40,851 - #9 if
INFO  16:01:40,851 - #37 (
INFO  16:01:40,851 - #46 inc
INFO  16:01:40,851 - #25 ==
INFO  16:01:40,851 - #47 2
INFO  16:01:40,852 - #38 )
INFO  16:01:40,852 - #46 pom
INFO  16:01:40,852 - #34 =
INFO  16:01:40,852 - #46 a
INFO  16:01:40,852 - #19 ;
INFO  16:01:40,852 - #4 return
INFO  16:01:40,852 - #46 sum
INFO  16:01:40,852 - #37 (
INFO  16:01:40,852 - #46 a
INFO  16:01:40,852 - #42 ,
INFO  16:01:40,852 - #46 pom
INFO  16:01:40,852 - #38 )
INFO  16:01:40,852 - #19 ;
INFO  16:01:40,852 - #18 }
INFO  16:01:40,852 - #46 bool
INFO  16:01:40,852 - #46 verify
INFO  16:01:40,852 - #37 (
INFO  16:01:40,852 - #38 )
INFO  16:01:40,852 - #17 {
INFO  16:01:40,852 - #3 print
INFO  16:01:40,853 - #37 (
INFO  16:01:40,853 - #48 v
INFO  16:01:40,853 - #38 )
INFO  16:01:40,853 - #19 ;
INFO  16:01:40,853 - #4 return
INFO  16:01:40,853 - #49 false
INFO  16:01:40,853 - #19 ;
INFO  16:01:40,853 - #18 }
INFO  16:01:40,853 - #5 void
INFO  16:01:40,853 - #46 main
INFO  16:01:40,853 - #37 (
INFO  16:01:40,853 - #38 )
INFO  16:01:40,853 - #17 {
INFO  16:01:40,853 - #9 if
INFO  16:01:40,853 - #37 (
INFO  16:01:40,853 - #47 1
INFO  16:01:40,853 - #26 !=
INFO  16:01:40,853 - #47 1
INFO  16:01:40,853 - #38 )
INFO  16:01:40,853 - #3 print
INFO  16:01:40,853 - #37 (
INFO  16:01:40,854 - #21 -
INFO  16:01:40,854 - #47 6
INFO  16:01:40,854 - #38 )
INFO  16:01:40,854 - #19 ;
INFO  16:01:40,854 - #8 else
INFO  16:01:40,854 - #3 print
INFO  16:01:40,854 - #37 (
INFO  16:01:40,854 - #47 0
INFO  16:01:40,854 - #38 )
INFO  16:01:40,854 - #19 ;
INFO  16:01:40,854 - #46 ibool
INFO  16:01:40,854 - #34 =
INFO  16:01:40,854 - #49 false
INFO  16:01:40,854 - #19 ;
INFO  16:01:40,854 - #46 i
INFO  16:01:40,854 - #34 =
INFO  16:01:40,854 - #47 0
INFO  16:01:40,854 - #19 ;
INFO  16:01:40,855 - #10 while
INFO  16:01:40,855 - #37 (
INFO  16:01:40,855 - #46 i
INFO  16:01:40,855 - #29 <
INFO  16:01:40,855 - #47 5
INFO  16:01:40,855 - #38 )
INFO  16:01:40,855 - #17 {
INFO  16:01:40,855 - #9 if
INFO  16:01:40,855 - #37 (
INFO  16:01:40,855 - #46 i
INFO  16:01:40,855 - #25 ==
INFO  16:01:40,855 - #47 2
INFO  16:01:40,855 - #38 )
INFO  16:01:40,855 - #46 ibool
INFO  16:01:40,855 - #34 =
INFO  16:01:40,855 - #49 true
INFO  16:01:40,855 - #19 ;
INFO  16:01:40,855 - #46 i
INFO  16:01:40,855 - #43 ++
INFO  16:01:40,855 - #19 ;
INFO  16:01:40,855 - #18 }
INFO  16:01:40,856 - #9 if
INFO  16:01:40,856 - #37 (
INFO  16:01:40,856 - #46 ibool
INFO  16:01:40,856 - #38 )
INFO  16:01:40,856 - #9 if
INFO  16:01:40,856 - #37 (
INFO  16:01:40,856 - #46 i
INFO  16:01:40,856 - #25 ==
INFO  16:01:40,856 - #47 5
INFO  16:01:40,856 - #38 )
INFO  16:01:40,856 - #3 print
INFO  16:01:40,856 - #37 (
INFO  16:01:40,856 - #47 1
INFO  16:01:40,856 - #38 )
INFO  16:01:40,856 - #19 ;
INFO  16:01:40,856 - #8 else
INFO  16:01:40,856 - #3 print
INFO  16:01:40,856 - #37 (
INFO  16:01:40,856 - #21 -
INFO  16:01:40,857 - #47 1
INFO  16:01:40,857 - #38 )
INFO  16:01:40,857 - #19 ;
INFO  16:01:40,857 - #46 a
INFO  16:01:40,857 - #34 =
INFO  16:01:40,857 - #47 2
INFO  16:01:40,857 - #19 ;
INFO  16:01:40,857 - #46 niz
INFO  16:01:40,857 - #34 =
INFO  16:01:40,857 - #11 new
INFO  16:01:40,857 - #46 int
INFO  16:01:40,857 - #39 [
INFO  16:01:40,857 - #47 3
INFO  16:01:40,857 - #40 ]
INFO  16:01:40,857 - #19 ;
INFO  16:01:40,857 - #46 niz
INFO  16:01:40,857 - #39 [
INFO  16:01:40,857 - #47 0
INFO  16:01:40,857 - #40 ]
INFO  16:01:40,857 - #34 =
INFO  16:01:40,857 - #47 1
INFO  16:01:40,857 - #22 *
INFO  16:01:40,857 - #46 a
INFO  16:01:40,857 - #19 ;
INFO  16:01:40,857 - #46 niz
INFO  16:01:40,857 - #39 [
INFO  16:01:40,857 - #47 1
INFO  16:01:40,857 - #40 ]
INFO  16:01:40,857 - #34 =
INFO  16:01:40,857 - #47 2
INFO  16:01:40,857 - #22 *
INFO  16:01:40,858 - #46 a
INFO  16:01:40,858 - #19 ;
INFO  16:01:40,858 - #46 niz
INFO  16:01:40,858 - #39 [
INFO  16:01:40,858 - #47 2
INFO  16:01:40,858 - #40 ]
INFO  16:01:40,858 - #34 =
INFO  16:01:40,858 - #46 sum
INFO  16:01:40,858 - #37 (
INFO  16:01:40,858 - #46 niz
INFO  16:01:40,858 - #39 [
INFO  16:01:40,858 - #47 1
INFO  16:01:40,858 - #40 ]
INFO  16:01:40,858 - #42 ,
INFO  16:01:40,858 - #46 niz
INFO  16:01:40,858 - #39 [
INFO  16:01:40,858 - #47 0
INFO  16:01:40,858 - #40 ]
INFO  16:01:40,858 - #38 )
INFO  16:01:40,858 - #22 *
INFO  16:01:40,858 - #46 a
INFO  16:01:40,858 - #20 +
INFO  16:01:40,858 - #47 1
INFO  16:01:40,858 - #19 ;
INFO  16:01:40,858 - #9 if
INFO  16:01:40,858 - #37 (
INFO  16:01:40,858 - #46 verify
INFO  16:01:40,858 - #37 (
INFO  16:01:40,858 - #38 )
INFO  16:01:40,858 - #32 ||
INFO  16:01:40,858 - #46 niz
INFO  16:01:40,858 - #39 [
INFO  16:01:40,858 - #47 2
INFO  16:01:40,858 - #40 ]
INFO  16:01:40,858 - #25 ==
INFO  16:01:40,858 - #47 4
INFO  16:01:40,859 - #38 )
INFO  16:01:40,859 - #3 print
INFO  16:01:40,859 - #37 (
INFO  16:01:40,859 - #46 ord
INFO  16:01:40,859 - #37 (
INFO  16:01:40,859 - #48 A
INFO  16:01:40,859 - #38 )
INFO  16:01:40,859 - #38 )
INFO  16:01:40,859 - #19 ;
INFO  16:01:40,859 - #8 else
INFO  16:01:40,859 - #3 print
INFO  16:01:40,859 - #37 (
INFO  16:01:40,859 - #46 ord
INFO  16:01:40,859 - #37 (
INFO  16:01:40,859 - #48 a
INFO  16:01:40,859 - #38 )
INFO  16:01:40,859 - #38 )
INFO  16:01:40,859 - #19 ;
INFO  16:01:40,859 - #3 print
INFO  16:01:40,859 - #37 (
INFO  16:01:40,859 - #46 eol
INFO  16:01:40,860 - #38 )
INFO  16:01:40,860 - #19 ;
INFO  16:01:40,860 - #46 i
INFO  16:01:40,860 - #34 =
INFO  16:01:40,860 - #47 0
INFO  16:01:40,860 - #19 ;
INFO  16:01:40,860 - #10 while
INFO  16:01:40,860 - #37 (
INFO  16:01:40,860 - #46 i
INFO  16:01:40,860 - #29 <
INFO  16:01:40,860 - #47 10
INFO  16:01:40,860 - #38 )
INFO  16:01:40,860 - #17 {
INFO  16:01:40,860 - #9 if
INFO  16:01:40,860 - #37 (
INFO  16:01:40,860 - #46 i
INFO  16:01:40,860 - #25 ==
INFO  16:01:40,860 - #47 3
INFO  16:01:40,860 - #38 )
INFO  16:01:40,860 - #17 {
INFO  16:01:40,860 - #46 i
INFO  16:01:40,860 - #43 ++
INFO  16:01:40,860 - #19 ;
INFO  16:01:40,861 - #14 continue
INFO  16:01:40,861 - #19 ;
INFO  16:01:40,861 - #18 }
INFO  16:01:40,861 - #9 if
INFO  16:01:40,861 - #37 (
INFO  16:01:40,861 - #46 i
INFO  16:01:40,861 - #25 ==
INFO  16:01:40,861 - #47 4
INFO  16:01:40,861 - #38 )
INFO  16:01:40,861 - #7 break
INFO  16:01:40,861 - #19 ;
INFO  16:01:40,861 - #46 i
INFO  16:01:40,861 - #34 =
INFO  16:01:40,861 - #46 inkrement
INFO  16:01:40,861 - #37 (
INFO  16:01:40,861 - #46 i
INFO  16:01:40,861 - #42 ,
INFO  16:01:40,861 - #47 1
INFO  16:01:40,861 - #38 )
INFO  16:01:40,861 - #19 ;
INFO  16:01:40,861 - #18 }
INFO  16:01:40,861 - #9 if
INFO  16:01:40,861 - #37 (
INFO  16:01:40,861 - #46 i
INFO  16:01:40,861 - #25 ==
INFO  16:01:40,861 - #47 3
INFO  16:01:40,861 - #31 &&
INFO  16:01:40,861 - #46 verify
INFO  16:01:40,861 - #37 (
INFO  16:01:40,861 - #38 )
INFO  16:01:40,861 - #38 )
INFO  16:01:40,861 - #3 print
INFO  16:01:40,861 - #37 (
INFO  16:01:40,861 - #21 -
INFO  16:01:40,861 - #47 4
INFO  16:01:40,861 - #38 )
INFO  16:01:40,861 - #19 ;
INFO  16:01:40,861 - #8 else
INFO  16:01:40,861 - #3 print
INFO  16:01:40,861 - #37 (
INFO  16:01:40,862 - #47 4
INFO  16:01:40,862 - #38 )
INFO  16:01:40,862 - #19 ;
INFO  16:01:40,862 - #12 read
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 niz
INFO  16:01:40,862 - #39 [
INFO  16:01:40,862 - #47 0
INFO  16:01:40,862 - #40 ]
INFO  16:01:40,862 - #38 )
INFO  16:01:40,862 - #19 ;
INFO  16:01:40,862 - #12 read
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 niz
INFO  16:01:40,862 - #39 [
INFO  16:01:40,862 - #47 1
INFO  16:01:40,862 - #40 ]
INFO  16:01:40,862 - #38 )
INFO  16:01:40,862 - #19 ;
INFO  16:01:40,862 - #12 read
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 niz
INFO  16:01:40,862 - #39 [
INFO  16:01:40,862 - #47 2
INFO  16:01:40,862 - #40 ]
INFO  16:01:40,862 - #38 )
INFO  16:01:40,862 - #19 ;
INFO  16:01:40,862 - #3 print
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 eol
INFO  16:01:40,862 - #38 )
INFO  16:01:40,862 - #19 ;
INFO  16:01:40,862 - #3 print
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 sum
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 sum
INFO  16:01:40,862 - #37 (
INFO  16:01:40,862 - #46 niz
INFO  16:01:40,862 - #39 [
INFO  16:01:40,862 - #47 0
INFO  16:01:40,862 - #40 ]
INFO  16:01:40,862 - #42 ,
INFO  16:01:40,862 - #46 niz
INFO  16:01:40,863 - #39 [
INFO  16:01:40,863 - #47 1
INFO  16:01:40,863 - #40 ]
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #42 ,
INFO  16:01:40,863 - #46 niz
INFO  16:01:40,863 - #39 [
INFO  16:01:40,863 - #47 2
INFO  16:01:40,863 - #40 ]
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #19 ;
INFO  16:01:40,863 - #3 print
INFO  16:01:40,863 - #37 (
INFO  16:01:40,863 - #46 eol
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #19 ;
INFO  16:01:40,863 - #3 print
INFO  16:01:40,863 - #37 (
INFO  16:01:40,863 - #46 inkrement
INFO  16:01:40,863 - #37 (
INFO  16:01:40,863 - #46 niz
INFO  16:01:40,863 - #39 [
INFO  16:01:40,863 - #47 2
INFO  16:01:40,863 - #40 ]
INFO  16:01:40,863 - #42 ,
INFO  16:01:40,863 - #47 2
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #38 )
INFO  16:01:40,863 - #19 ;
INFO  16:01:40,863 - #46 a
INFO  16:01:40,863 - #34 =
INFO  16:01:40,863 - #47 3
INFO  16:01:40,863 - #19 ;
INFO  16:01:40,863 - #46 i
INFO  16:01:40,863 - #34 =
INFO  16:01:40,863 - #47 0
INFO  16:01:40,863 - #19 ;
INFO  16:01:40,864 - #10 while
INFO  16:01:40,864 - #37 (
INFO  16:01:40,864 - #46 i
INFO  16:01:40,864 - #29 <
INFO  16:01:40,864 - #47 3
INFO  16:01:40,864 - #38 )
INFO  16:01:40,864 - #17 {
INFO  16:01:40,864 - #46 niz
INFO  16:01:40,864 - #39 [
INFO  16:01:40,864 - #46 i
INFO  16:01:40,864 - #40 ]
INFO  16:01:40,864 - #34 =
INFO  16:01:40,864 - #46 niz
INFO  16:01:40,864 - #39 [
INFO  16:01:40,864 - #46 i
INFO  16:01:40,864 - #40 ]
INFO  16:01:40,864 - #22 *
INFO  16:01:40,864 - #47 2
INFO  16:01:40,864 - #22 *
INFO  16:01:40,864 - #46 a
INFO  16:01:40,864 - #19 ;
INFO  16:01:40,864 - #46 i
INFO  16:01:40,864 - #43 ++
INFO  16:01:40,864 - #19 ;
INFO  16:01:40,864 - #18 }
INFO  16:01:40,864 - #46 niz
INFO  16:01:40,864 - #39 [
INFO  16:01:40,864 - #47 1
INFO  16:01:40,864 - #40 ]
INFO  16:01:40,864 - #34 =
INFO  16:01:40,864 - #47 6
INFO  16:01:40,864 - #19 ;
INFO  16:01:40,864 - #46 niz
INFO  16:01:40,864 - #36 .
INFO  16:01:40,864 - #45 foreach
INFO  16:01:40,864 - #37 (
INFO  16:01:40,864 - #46 curr
INFO  16:01:40,864 - #41 =>
INFO  16:01:40,864 - #3 print
INFO  16:01:40,864 - #37 (
INFO  16:01:40,864 - #46 curr
INFO  16:01:40,864 - #38 )
INFO  16:01:40,864 - #19 ;
INFO  16:01:40,864 - #38 )
INFO  16:01:40,864 - #19 ;
INFO  16:01:40,865 - #46 niz2
INFO  16:01:40,865 - #34 =
INFO  16:01:40,865 - #46 niz
INFO  16:01:40,865 - #36 .
INFO  16:01:40,865 - #15 findAndReplace
INFO  16:01:40,865 - #37 (
INFO  16:01:40,865 - #46 jedan
INFO  16:01:40,865 - #20 +
INFO  16:01:40,865 - #47 5
INFO  16:01:40,865 - #42 ,
INFO  16:01:40,865 - #46 curr
INFO  16:01:40,865 - #41 =>
INFO  16:01:40,865 - #46 curr
INFO  16:01:40,865 - #22 *
INFO  16:01:40,865 - #47 3
INFO  16:01:40,865 - #38 )
INFO  16:01:40,865 - #19 ;
INFO  16:01:40,865 - #46 niz2
INFO  16:01:40,865 - #36 .
INFO  16:01:40,865 - #45 foreach
INFO  16:01:40,865 - #37 (
INFO  16:01:40,865 - #46 curr
INFO  16:01:40,865 - #41 =>
INFO  16:01:40,865 - #3 print
INFO  16:01:40,865 - #37 (
INFO  16:01:40,865 - #46 curr
INFO  16:01:40,865 - #38 )
INFO  16:01:40,865 - #19 ;
INFO  16:01:40,865 - #38 )
INFO  16:01:40,865 - #19 ;
INFO  16:01:40,865 - #18 }
INFO  16:01:40,865 - #18 }
